/* ================================================================
   Typography
================================================================ */
// A basic system of typography contains the following:
// 1. A cohesive set of font families (typically 1-3)
// 2. Modular scale for font sizes
// 3. Responsive text (font size + breakpoints)
// 4. Spacing and vertical rhythm (typically handled with line-height)
// 5. Theme

// ----------------------------------------------------------------
// Set the basic font families
// ----------------------------------------------------------------
$primary-font: sans-serif;
$secondary-font: serif;
$tertiary-font: Courier;

// ----------------------------------------------------------------
// Line Heights
// ----------------------------------------------------------------
$heading-line-height: 1.2;
$body-line-height: 1.5;

// ----------------------------------------------------------------
// Set the base font size and the scaling ratio
// ----------------------------------------------------------------
$base-font-size: 1em;
$base-scale-ratio: 1.2;

// ----------------------------------------------------------------
// Font Scale Map
// Map to handle the font size relative to the base
// Usage:
//      font-scale(m)
// ---------------------------------------------------------------
// key: (font-size)
$font-sizes: ( 
    xxs: ($base-font-size/($base-scale-ratio*1.5)),
    xs:  ($base-font-size/($base-scale-ratio*1.2)), 
    s:   ($base-font-size/$base-scale-ratio), 
    m:   ($base-font-size),                          // Base font size
    l:   ($base-font-size*$base-scale-ratio*2), 
    xl:  ($base-font-size*$base-scale-ratio*3), 
    xxl: ($base-font-size*$base-scale-ratio*4), 
);

// ---------------------------------------------------------------
// Font Scale Function
// Iterates through the map
// Usage:
// .element {
//      font-size: font-scale(m);
// }
// ---------------------------------------------------------------
@function font-scale($scale) {
    @return map-get($font-sizes, $scale);
}

// ----------------------------------------------------------------
// Font Face Mixin
// This returns the CSS code to embed external fonts and will
// support modern browsers.
// See https://css-tricks.com/snippets/css/using-font-face/ on how
// to increase the mixin to support older browsers.
//
// Usage:
// .element {
//      @include font-face(opensans, "Open Sans", normal, normal);
// }
// ----------------------------------------------------------------
@mixin font-face($font-file, $font-name, $font-weight: "", $font-style: "") {
    $filepath: "assets/fonts/" + $font-file;

    @font-face {
        font-family: "#{$name}";
        src: url($filepath + ".woff2") format('woff2'),
             url($filepath + ".woff") format('woff');
        @if $font-style != "" {
            font-style: "#{$font-style}";
        }
        @if $font-weight != "" {
            font-weight: "#{$font-weight}";
        }
    }
}

/* ----------------------------------------------------------------
   Headings
---------------------------------------------------------------- */
// moved to the components directory

/* ----------------------------------------------------------------
   Links
---------------------------------------------------------------- */
a {
    color: color(secondary);

    &:visited {
        color: color(secondary, x-dark);
    }
}

/* ----------------------------------------------------------------
   Truncate text if it exceeds its' parents container
---------------------------------------------------------------- */
%truncate, .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}